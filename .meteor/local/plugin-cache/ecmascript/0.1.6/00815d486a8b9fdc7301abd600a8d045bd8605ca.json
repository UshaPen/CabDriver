{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"\n\nif (Meteor.isServer) {\n\t// for setting extra fields other then username and password in accounts-ui\n\tAccounts.onCreateUser(function (options, user) {\n\t\tif (options.secretAttribute) user.secretAttribute = options.secretAttribute;\n\n\t\tif (options.profile) user.profile = options.profile;\n\n\t\treturn user;\n\t});\n}\n\nRouter.configure({\n\tlayoutTemplate: 'main'\n});\n\nif (Meteor.isClient) {\n\tvar flag = 'true';\n\tvar MAP_ZOOM = 12;\n\n\t//Session.set('apimaps', false);\n\tSession.set('epoly', false);\n\n\tMeteor.startup(function () {\n\t\tGoogleMaps.load();\n\t\t/*\n  \t$.getScript('http://maps.google.com/maps/api/js?sensor=false', function(){\n  \t// script has loaded\n  \t  Session.set('apimaps', true);\n  \t });\n  */\n\t\t$.getScript('http://www.geocodezip.com/scripts/v3_epoly.js', function () {\n\t\t\t// script has loaded\n\t\t\tSession.set('epoly', true);\n\t\t});\n\t});\n\n\tTemplate.map.onCreated(function () {\n\t\tvar self = this;\n\n\t\tGoogleMaps.ready('map', function (map) {\n\t\t\t/*\t\t  google.maps.event.addListener(map.instance, 'click', function(event) {\n   \t\t  Markers.insert({ lat: event.latLng.lat(), lng: event.latLng.lng() });\n   \t\t  //console.log(\"clicked\");\n   \t});\n   */\n\t\t\tvar markers = {};\n\t\t\tvar i = 1;\n\t\t\tMarkers.find().observe({\n\t\t\t\tadded: function (document) {\n\t\t\t\t\t// Create a marker for this document\n\t\t\t\t\ti++;\n\t\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\t\tvar marker = new google.maps.Marker({\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tanimation: google.maps.Animation.DROP,\n\t\t\t\t\t\t\tposition: new google.maps.LatLng(document.lat, document.lng),\n\t\t\t\t\t\t\tmap: map.instance,\n\t\t\t\t\t\t\tid: document._id\n\t\t\t\t\t\t});\n\t\t\t\t\t}, i * 200);\n\t\t\t\t}\n\t\t\t});\n\t\t\t/*\n   Meteor.users.find().observe({  \n   \tadded: function(document) {\n   \t\t// Create a marker for this document\n   \t\ti++;\n   \t    window.setTimeout(function() {\n   \t    var marker = new google.maps.Marker({\n   \t\t  draggable: true,\n   \t\t  animation: google.maps.Animation.DROP,\n   \t\t  position: new google.maps.LatLng(document.profile.coordinates.lat, document.profile.coordinates.lng),\n   \t\t  map: map.instance,\n   \t\t  id: document._id\n   \t\t});\n   \t\t}, i*200);\n       }\n   });\n   */\n\n\t\t\tgoogle.maps.event.addListener(map.instance, 'click', function (event) {\n\n\t\t\t\tif (Session.get(\"passid\") === Meteor.userId()) {\n\t\t\t\t\tvar passengerlat = event.latLng.lat();\n\t\t\t\t\tvar passengerLng = event.latLng.lng();\n\t\t\t\t\tconsole.log(\"clicked pannenger\");\n\t\t\t\t\tconsole.log(event.latLng.lat());\n\t\t\t\t\tSession.set(\"passlat\", event.latLng.lat());\n\t\t\t\t\tSession.set(\"passlng\", event.latLng.lng());\n\t\t\t\t\tconsole.log(event.latLng.lng());\n\t\t\t\t\tif (flag == 'true') {\n\t\t\t\t\t\tvar passmarker = new google.maps.Marker({\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tanimation: google.maps.Animation.DROP,\n\t\t\t\t\t\t\tposition: new google.maps.LatLng(event.latLng.lat(), event.latLng.lng()),\n\t\t\t\t\t\t\tmap: map.instance,\n\t\t\t\t\t\t\ticon: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\n\t\t\t\t\t\t});\n\t\t\t\t\t\tflag = 'false';\n\t\t\t\t\t}\n\t\t\t\t\tgoogle.maps.LatLng.prototype.distanceFrom = function (lat_lng) {\n\t\t\t\t\t\tvar lat = [this.lat(), lat_lng.lat()];\n\t\t\t\t\t\tvar lng = [this.lng(), lat_lng.lng()];\n\t\t\t\t\t\tvar R = 6378137;\n\t\t\t\t\t\tvar dLat = (lat[1] - lat[0]) * Math.PI / 180;\n\t\t\t\t\t\tvar dLng = (lng[1] - lng[0]) * Math.PI / 180;\n\t\t\t\t\t\tvar a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat[0] * Math.PI / 180) * Math.cos(lat[1] * Math.PI / 180) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n\t\t\t\t\t\tvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\t\t\t\t\t\tvar d = R * c;\n\t\t\t\t\t\treturn d;\n\t\t\t\t\t};\n\t\t\t\t\tvar cabloc = [];\n\t\t\t\t\tvar distarry = [];\n\t\t\t\t\tvar passpos = new google.maps.LatLng(Session.get(\"passlat\"), Session.get(\"passlng\"));\n\t\t\t\t\tvar data = Markers.find().fetch();\n\n\t\t\t\t\tfor (var k = 0; k < data.length; k++) {\n\t\t\t\t\t\tcabloc[k] = new google.maps.LatLng(data[k].lat, data[k].lng);\n\t\t\t\t\t\tdistarry[k] = cabloc[k].distanceFrom(passpos);\n\t\t\t\t\t}\n\t\t\t\t\tvar minval = _.min(distarry);\n\t\t\t\t\tvar indx = _.indexOf(distarry, minval);\n\t\t\t\t\tvar nearestcab = new google.maps.LatLng(data[indx].lat, data[indx].lng);\n\t\t\t\t\tpolyline = new google.maps.Polyline({\n\t\t\t\t\t\tpath: [nearestcab, passpos],\n\t\t\t\t\t\tstrokeColor: \"#FF0000\",\n\t\t\t\t\t\tstrokeOpacity: 0.5,\n\t\t\t\t\t\tstrokeWeight: 4,\n\t\t\t\t\t\tgeodesic: true,\n\t\t\t\t\t\tmap: map.instance\n\t\t\t\t\t});\n\n\t\t\t\t\tvar request = {\n\t\t\t\t\t\torigin: nearestcab,\n\t\t\t\t\t\tdestination: passpos,\n\t\t\t\t\t\ttravelMode: google.maps.TravelMode.DRIVING\n\t\t\t\t\t};\n\n\t\t\t\t\tvar rendererOptions = {\n\t\t\t\t\t\tmap: map.instance,\n\t\t\t\t\t\tsuppressMarkers: true,\n\t\t\t\t\t\tpreserveViewport: true\n\t\t\t\t\t};\n\t\t\t\t\tconsole.log(\"testing1\");\n\n\t\t\t\t\tdirectionsService = new google.maps.DirectionsService();\n\t\t\t\t\tdirectionsDisplay = new google.maps.DirectionsRenderer(rendererOptions);\n\t\t\t\t\tdirectionsService.route(request, function (response, status) {\n\t\t\t\t\t\tconsole.log(\"testing2\");\n\n\t\t\t\t\t\tif (status == google.maps.DirectionsStatus.OK) {\n\t\t\t\t\t\t\tconsole.log(\"testing3\");\n\n\t\t\t\t\t\t\tdirectionsDisplay.setDirections(response);\n\t\t\t\t\t\t\tshowSteps(response);\n\t\t\t\t\t\t} else console.log(status);\n\t\t\t\t\t});\n\n\t\t\t\t\tfunction showSteps(directionResult) {\n\t\t\t\t\t\t// For each step, place a marker, and add the text to the marker's\n\t\t\t\t\t\t// info window. Also attach the marker to an array so we\n\t\t\t\t\t\t// can keep track of it and remove it when calculating new\n\t\t\t\t\t\t// routes.\n\t\t\t\t\t\tvar legs = directionResult.routes[0].legs[0];\n\t\t\t\t\t\tconsole.log(\"STEPS\");\n\t\t\t\t\t\tconsole.log(legs);\n\t\t\t\t\t\tvar steps = legs.steps;\n\t\t\t\t\t\tconsole.log(steps);\n\t\t\t\t\t\tfor (var i = 0; i < legs.length; i++) {\n\t\t\t\t\t\t\tconsole.log(\"inn\");\n\t\t\t\t\t\t\tvar marker = new google.maps.Marker({\n\t\t\t\t\t\t\t\tposition: legs[i].start_location,\n\t\t\t\t\t\t\t\tmap: map.instance,\n\t\t\t\t\t\t\t\ticon: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconsole.log(legs[i].start_location);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\t//=====================================\n\t\t});\n\t\t/*\n      GoogleMaps.ready('map', function(map) {\n        var marker;\n  \n        // Create and move the marker when latLng changes.\n        self.autorun(function() {\n          var latLng = Geolocation.latLng();\n          if (! latLng)\n            return;\n  \n          // If the marker doesn't yet exist, create it.\n          if (! marker) {\n            marker = new google.maps.Marker({\n              position: new google.maps.LatLng(latLng.lat, latLng.lng),\n              map: map.instance\n            });\n          }\n          // The marker already exists, so we'll just change its position.\n          else {\n            marker.setPosition(latLng);\n          }\n  \n          // Center and zoom the map view onto the current position.\n          map.instance.setCenter(marker.getPosition());\n          map.instance.setZoom(MAP_ZOOM);\n        });\n      });\n  \t*/\n\t});\n\n\tTemplate.map.helpers({\n\t\tgeolocationError: function () {\n\t\t\tvar error = Geolocation.error();\n\t\t\treturn error && error.message;\n\t\t},\n\t\tmapOptions: function () {\n\t\t\tvar latLng = Geolocation.latLng();\n\t\t\t// Initialize the map once we have the latLng.\n\t\t\tif (GoogleMaps.loaded() && latLng) {\n\t\t\t\treturn {\n\t\t\t\t\tcenter: new google.maps.LatLng(latLng.lat, latLng.lng),\n\t\t\t\t\tzoom: MAP_ZOOM\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t});\n\n\t//APP-1\n\n\tTemplate.navigation.events({\n\t\t'click .logout': function (event) {\n\t\t\tevent.preventDefault();\n\t\t\tMeteor.logout();\n\t\t\tRouter.go('login');\n\t\t}\n\t});\n\n\t//define a default set of rules and error messages for our validate functions:\n\n\t$.validator.setDefaults({\n\t\trules: {\n\t\t\temail: {\n\t\t\t\trequired: true,\n\t\t\t\temail: true\n\t\t\t},\n\t\t\tpassword: {\n\t\t\t\trequired: true,\n\t\t\t\tminlength: 6\n\t\t\t}\n\t\t},\n\t\tmessages: {\n\t\t\temail: {\n\t\t\t\trequired: \"You must enter an email address.\",\n\t\t\t\temail: \"You've entered an invalid email address.\"\n\t\t\t},\n\t\t\tpassword: {\n\t\t\t\trequired: \"You must enter a password.\",\n\t\t\t\tminlength: \"Your password must be at least {0} characters.\"\n\t\t\t}\n\t\t}\n\t});\n\n\tTemplate.login.onRendered(function () {\n\t\tvar validator = $('.login').validate({\n\t\t\tsubmitHandler: function (event) {\n\t\t\t\t//console.log(\"You just submitted the 'login' form.\");\n\t\t\t\tvar email = $('[name=email]').val();\n\t\t\t\tvar password = $('[name=password]').val();\n\n\t\t\t\tMeteor.loginWithPassword(email, password, function (error) {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\t//\t\t\t\t\tconsole.log(error.reason);\n\t\t\t\t\t\tif (error.reason == \"User not found\") {\n\t\t\t\t\t\t\t//\t\t\t\t\tconsole.log(error.reason);\n\t\t\t\t\t\t\tvalidator.showErrors({\n\t\t\t\t\t\t\t\temail: \"That email doesn't belong to a registered user.\"\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (error.reason == \"Incorrect password\") {\n\t\t\t\t\t\t\tvalidator.showErrors({\n\t\t\t\t\t\t\t\tpassword: \"You entered an incorrect password.\"\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar currentRoute = Router.current().route.getName();\n\t\t\t\t\t\tif (currentRoute == \"login\") {\n\t\t\t\t\t\t\tSession.set(\"passid\", Meteor.userId());\n\t\t\t\t\t\t\tRouter.go(\"map\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n\n\tTemplate.registerCab.onRendered(function () {\n\t\tvar validator = $('.registerCab').validate({\n\n\t\t\trules: {\n\t\t\t\tusrname: {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tminlength: 4\n\t\t\t\t},\n\t\t\t\tmobile: {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tminlength: 10,\n\t\t\t\t\tdigits: true\n\t\t\t\t},\n\t\t\t\tlatitude: {\n\t\t\t\t\trequired: true\n\t\t\t\t},\n\t\t\t\tlongitude: {\n\t\t\t\t\trequired: true\n\t\t\t\t}\n\t\t\t},\n\t\t\tmessages: {\n\t\t\t\tusrname: {\n\t\t\t\t\trequired: \"You must enter a user name.\",\n\t\t\t\t\tminlength: \"Your User name must be at least {0} characters.\"\n\t\t\t\t},\n\t\t\t\tmobile: {\n\t\t\t\t\trequired: \"You must enter a mobile number.\",\n\t\t\t\t\tminlength: \"Your number must be at least {0} characters.\",\n\t\t\t\t\tdigits: \"You must enter valid digits.\"\n\t\t\t\t},\n\t\t\t\tlatitude: {\n\t\t\t\t\trequired: \"You must enter a latitude.\"\n\t\t\t\t},\n\t\t\t\tlongitude: {\n\t\t\t\t\trequired: \"You must enter a longitude.\"\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsubmitHandler: function (event) {\n\t\t\t\tvar email = $('[name=email]').val();\n\t\t\t\tvar password = $('[name=password]').val();\n\t\t\t\tvar mobile = $('[name=mobile]').val();\n\t\t\t\tvar usrname = $('[name=usrname]').val();\n\t\t\t\tvar type = $('[name=typeofuser]').val();\n\t\t\t\tvar latitude = $('[name=latitude]').val();\n\t\t\t\tvar longitude = $('[name=longitude]').val();\n\t\t\t\tvar options = {\n\t\t\t\t\temail: email,\n\t\t\t\t\tpassword: password,\n\t\t\t\t\tprofile: {\n\t\t\t\t\t\tname: usrname,\n\t\t\t\t\t\tmobile: mobile,\n\t\t\t\t\t\ttypeofuser: type,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tlat: latitude,\n\t\t\t\t\t\t\tlng: longitude\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tsecretAttribute: \"secretString\"\n\t\t\t\t};\n\n\t\t\t\tAccounts.createUser(options, function (error) {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tif (error.reason == \"Email already exists.\") {\n\t\t\t\t\t\t\tvalidator.showErrors({\n\t\t\t\t\t\t\t\temail: \"That email already belongs to a registered user.\"\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//this.render('map', {data: {title: 'Now You are a Registered Cab Driver at Devois'}});\n\t\t\t\t\t\tRouter.go(\"map\"); // Redirect user if registration succeeds\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\t//var res = Meteor.users.find().fetch();\n\t\t//console.log(\"RES\");\n\t\t//console.log(res);\n\t});\n\n\tTemplate.registerPass.onRendered(function () {\n\t\tvar validator = $('.registerPass').validate({\n\n\t\t\trules: {\n\t\t\t\tusrname: {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tminlength: 4\n\t\t\t\t},\n\t\t\t\tmobile: {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tminlength: 10,\n\t\t\t\t\tdigits: true\n\t\t\t\t}\n\t\t\t},\n\t\t\tmessages: {\n\t\t\t\tusrname: {\n\t\t\t\t\trequired: \"You must enter a user name.\",\n\t\t\t\t\tminlength: \"Your User name must be at least {0} characters.\"\n\t\t\t\t},\n\t\t\t\tmobile: {\n\t\t\t\t\trequired: \"You must enter a mobile number.\",\n\t\t\t\t\tminlength: \"Your number must be at least {0} characters.\",\n\t\t\t\t\tdigits: \"You must enter valid digits.\"\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tsubmitHandler: function (event) {\n\t\t\t\tvar email = $('[name=email]').val();\n\t\t\t\tvar password = $('[name=password]').val();\n\t\t\t\tvar mobile = $('[name=mobile]').val();\n\t\t\t\tvar usrname = $('[name=usrname]').val();\n\t\t\t\tvar type = $('[name=typeofuser]').val();\n\t\t\t\tvar options = {\n\t\t\t\t\temail: email,\n\t\t\t\t\tpassword: password,\n\t\t\t\t\tprofile: {\n\t\t\t\t\t\tname: usrname,\n\t\t\t\t\t\tmobile: mobile,\n\t\t\t\t\t\ttypeofuser: type,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tlat: 0,\n\t\t\t\t\t\t\tlng: 0\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tsecretAttribute: \"secretString\"\n\t\t\t\t};\n\n\t\t\t\tAccounts.createUser(options, function (error) {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tif (error.reason == \"Email already exists.\") {\n\t\t\t\t\t\t\tvalidator.showErrors({\n\t\t\t\t\t\t\t\temail: \"That email already belongs to a registered user.\"\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tSession.set(\"passid\", Meteor.userId());\n\t\t\t\t\t\tRouter.go(\"map\"); // Redirect user if registration succeeds\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n}\n\nRouter.route('/registerCab');\nRouter.route('/registerPass');\n\nRouter.route('/map');\nRouter.route('/login');\n\nRouter.route('/', {\n\tname: 'home',\n\ttemplate: 'home'\n});","ast":null,"map":{"version":3,"sources":["/googlemaps-geolocation.js"],"names":[],"mappings":"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","file":"/googlemaps-geolocation.js.map","sourcesContent":["\n\nif (Meteor.isServer) {\n// for setting extra fields other then username and password in accounts-ui\nAccounts.onCreateUser(function(options, user) {\n    if (options.secretAttribute)\n        user.secretAttribute = options.secretAttribute;\n\n    if (options.profile)\n        user.profile = options.profile;\n\n    return user;\n});\n\n}\n\n\nRouter.configure({\n    layoutTemplate: 'main'\n});\n\n\nif (Meteor.isClient) {\n\tvar flag = 'true';\n  var MAP_ZOOM = 12;\n\n  //Session.set('apimaps', false);\n  Session.set('epoly', false);\n  \n  Meteor.startup(function() {\n    GoogleMaps.load();\n/*\n\t$.getScript('http://maps.google.com/maps/api/js?sensor=false', function(){\n\t// script has loaded\n\t  Session.set('apimaps', true);\n\t });\n*/\n\t $.getScript('http://www.geocodezip.com/scripts/v3_epoly.js', function(){\n\t// script has loaded\n\t  Session.set('epoly', true);\n\t });\n \n \n  });\n\n  Template.map.onCreated(function() {\n    var self = this;\n\t\n    GoogleMaps.ready('map', function(map) {\n/*\t\t  google.maps.event.addListener(map.instance, 'click', function(event) {\n\t\t  Markers.insert({ lat: event.latLng.lat(), lng: event.latLng.lng() });\n\t\t  //console.log(\"clicked\");\n\t});\n*/\n\tvar markers = {};\n\tvar i = 1;\n\tMarkers.find().observe({  \n\t\tadded: function(document) {\n\t\t\t// Create a marker for this document\n\t\t\ti++;\n\t\t    window.setTimeout(function() {\n\t\t    var marker = new google.maps.Marker({\n\t\t\t  draggable: true,\n\t\t\t  animation: google.maps.Animation.DROP,\n\t\t\t  position: new google.maps.LatLng(document.lat, document.lng),\n\t\t\t  map: map.instance,\n\t\t\t  id: document._id\n\t\t\t});\n\t\t\t}, i*200);\n\t    }\n\t});\n\t/*\n\tMeteor.users.find().observe({  \n\t\tadded: function(document) {\n\t\t\t// Create a marker for this document\n\t\t\ti++;\n\t\t    window.setTimeout(function() {\n\t\t    var marker = new google.maps.Marker({\n\t\t\t  draggable: true,\n\t\t\t  animation: google.maps.Animation.DROP,\n\t\t\t  position: new google.maps.LatLng(document.profile.coordinates.lat, document.profile.coordinates.lng),\n\t\t\t  map: map.instance,\n\t\t\t  id: document._id\n\t\t\t});\n\t\t\t}, i*200);\n\t    }\n\t});\n*/\t\n\t\n\t\n\tgoogle.maps.event.addListener(map.instance, 'click', function(event) {\n      \n\t  if(Session.get(\"passid\") === Meteor.userId()){\n\t   var passengerlat = event.latLng.lat();\n\t  var passengerLng = event.latLng.lng();\n\t  console.log(\"clicked pannenger\");\n\t  console.log(event.latLng.lat());\n\t  Session.set(\"passlat\",event.latLng.lat());\n\t  Session.set(\"passlng\",event.latLng.lng());\n\t  console.log(event.latLng.lng());\n\t  if(flag == 'true'){\n\t\tvar passmarker = new google.maps.Marker({\n\t\t\t  draggable: true,\n\t\t\t  animation: google.maps.Animation.DROP,\n\t\t\t  position: new google.maps.LatLng(event.latLng.lat(), event.latLng.lng()),\n\t\t\t  map: map.instance,\n\t\t\t  icon:'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\n\t\t\t});\n\t\t\tflag = 'false';\n\t  }\n\t\t google.maps.LatLng.prototype.distanceFrom = function(lat_lng) {\n\t\t\t  var lat = [this.lat(), lat_lng.lat()]\n\t\t\t  var lng = [this.lng(), lat_lng.lng()]\n\t\t\t  var R = 6378137;\n\t\t\t  var dLat = (lat[1]-lat[0]) * Math.PI / 180;\n\t\t\t  var dLng = (lng[1]-lng[0]) * Math.PI / 180;\n\t\t\t  var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n\t\t\t  Math.cos(lat[0] * Math.PI / 180 ) * Math.cos(lat[1] * Math.PI / 180 ) *\n\t\t\t  Math.sin(dLng/2) * Math.sin(dLng/2);\n\t\t\t  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n\t\t\t  var d = R * c;\n\t\t\t  return (d);\n\t\t\t}\n\t\t\tvar cabloc = [];\n\t\t\tvar distarry = [];\n\t\t\tvar passpos = new google.maps.LatLng(Session.get(\"passlat\"),Session.get(\"passlng\"));\n\t\t\tvar data = Markers.find().fetch();\n\t\t\t\t\n\t\t\tfor(var k=0; k<data.length;k++){\n\t\t\t\tcabloc[k] = new google.maps.LatLng(data[k].lat, data[k].lng);\n\t\t\t\tdistarry[k] = cabloc[k].distanceFrom(passpos);\n\t\t\t\n\t\t\t}\n\t\t\tvar minval = _.min(distarry);\n\t\t\tvar indx = _.indexOf(distarry, minval);\n\t\t\tvar nearestcab = new google.maps.LatLng(data[indx].lat, data[indx].lng);\n\t\t\t polyline = new google.maps.Polyline({\n                path: [nearestcab, passpos],\n                strokeColor: \"#FF0000\",\n                strokeOpacity: 0.5,\n                strokeWeight: 4,\n                geodesic: true,\n                map: map.instance\n            });\n\t\t\n\nvar request = {\n            origin: nearestcab,\n            destination: passpos,\n            travelMode: google.maps.TravelMode.DRIVING\n\t\t\t};\n\t\t\t\n\t\t\tvar rendererOptions = {\n\t\t\t\tmap: map.instance,\n\t\t\t\tsuppressMarkers : true,\n\t\t\t\tpreserveViewport: true\n\t\t\t}\n\t\t\tconsole.log(\"testing1\");\n\n\t\t\tdirectionsService = new google.maps.DirectionsService();\n\t\t\tdirectionsDisplay = new google.maps.DirectionsRenderer(rendererOptions);     \n            directionsService.route(request, function(response, status) {\n\t\t\t\t\tconsole.log(\"testing2\");\n\n\t\t\t\tif (status == google.maps.DirectionsStatus.OK) {\n\t\t\t\tconsole.log(\"testing3\");\n\n\t\t\t\tdirectionsDisplay.setDirections(response);\n\t\t\t\tshowSteps(response);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tconsole.log(status);\n\t\t\t});\n\n\t\t\t\n\t\t\tfunction showSteps(directionResult) {\n\t\t\t// For each step, place a marker, and add the text to the marker's\n\t\t\t// info window. Also attach the marker to an array so we\n\t\t\t// can keep track of it and remove it when calculating new\n\t\t\t// routes.\n\t\t\tvar legs = directionResult.routes[0].legs[0];\n\t\t\tconsole.log(\"STEPS\");\n\t\t\tconsole.log(legs);\n\t\t\t    var steps = legs.steps;\n\t\t\t\tconsole.log(steps);\n\t\t    for (var i = 0; i < legs.length; i++) {\n\t\t\t\tconsole.log(\"inn\");\n\t\t\t\tvar marker = new google.maps.Marker({\n\t\t\t\t\tposition: legs[i].start_location,\n\t\t\t\t\tmap: map.instance,\n\t\t\t\t\ticon:'http://maps.google.com/mapfiles/ms/icons/green-dot.png'\n\t\t\t\t});\n\t\t\tconsole.log(legs[i].start_location);\n\t\t\t}\n\t\t\t}\n\n\n\n\n\t\t\n\t  }  \n    });\n\t//=====================================\n\t\t\n\t\t\t\n\t\n\t\n});\n/*\n    GoogleMaps.ready('map', function(map) {\n      var marker;\n\n      // Create and move the marker when latLng changes.\n      self.autorun(function() {\n        var latLng = Geolocation.latLng();\n        if (! latLng)\n          return;\n\n        // If the marker doesn't yet exist, create it.\n        if (! marker) {\n          marker = new google.maps.Marker({\n            position: new google.maps.LatLng(latLng.lat, latLng.lng),\n            map: map.instance\n          });\n        }\n        // The marker already exists, so we'll just change its position.\n        else {\n          marker.setPosition(latLng);\n        }\n\n        // Center and zoom the map view onto the current position.\n        map.instance.setCenter(marker.getPosition());\n        map.instance.setZoom(MAP_ZOOM);\n      });\n    });\n\t*/\n  });\n\n  Template.map.helpers({\n    geolocationError: function() {\n      var error = Geolocation.error();\n      return error && error.message;\n    },\n    mapOptions: function() {\n      var latLng = Geolocation.latLng();\n      // Initialize the map once we have the latLng.\n      if (GoogleMaps.loaded() && latLng) {\n        return {\n          center: new google.maps.LatLng(latLng.lat, latLng.lng),\n          zoom: MAP_ZOOM\n        };\n      }\n    }\n  });\n  \n  //APP-1\n\n  Template.navigation.events({\n    'click .logout': function(event){\n        event.preventDefault();\n        Meteor.logout();\n        Router.go('login');\n    }\n});  \n\n  \n  //define a default set of rules and error messages for our validate functions:\n\n\n\n$.validator.setDefaults({\n    rules: {\n        email: {\n            required: true,\n            email: true\n        },\n        password: {\n            required: true,\n            minlength: 6\n        }\n    },\n    messages: {\n        email: {\n            required: \"You must enter an email address.\",\n            email: \"You've entered an invalid email address.\"\n        },\n        password: {\n            required: \"You must enter a password.\",\n            minlength: \"Your password must be at least {0} characters.\"\n        }\n    }\n});\n\n  \n  Template.login.onRendered(function(){\n\t  var validator = $('.login').validate({\n\t\tsubmitHandler: function(event){\n            //console.log(\"You just submitted the 'login' form.\");\n\t\t\t        var email = $('[name=email]').val();\n        var password = $('[name=password]').val();\n\t\t\n        Meteor.loginWithPassword(email, password, function(error){\n\t\t\t\tif(error){\n//\t\t\t\t\tconsole.log(error.reason);\n\t\t\t\t\tif(error.reason == \"User not found\"){\n\t//\t\t\t\t\tconsole.log(error.reason);\n\t\t\t\t\t\tvalidator.showErrors({\n\t\t\t\t\t\t\temail: \"That email doesn't belong to a registered user.\"   \n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif(error.reason == \"Incorrect password\"){\n\t\t\t\t\t\tvalidator.showErrors({\n\t\t\t\t\t\t\tpassword: \"You entered an incorrect password.\"    \n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t    \n\t\t\t\telse {\n                    var currentRoute = Router.current().route.getName();\n                    if(currentRoute == \"login\"){\n\t\t\t\t\t\tSession.set(\"passid\", Meteor.userId());\n\t\t\t\t\t\tRouter.go(\"map\");\n                    }\n                }\n\t\t});\n\t\t\n\n        }\n    });\n});\n  \n  \n  Template.registerCab.onRendered(function(){\n\t  var validator = $('.registerCab').validate({\n\t\t\n\t\t\trules: {\n\t\t\tusrname: {\n\t\t\t\trequired: true,\n\t\t\t\tminlength: 4\n\t\t\t},\n\t\t\tmobile: {\n\t\t\t\trequired: true,\n\t\t\t\tminlength: 10,\n\t\t\t\tdigits: true\n\t\t\t},\n\t\t\tlatitude: {\n\t\t\t\trequired: true\n\t\t\t},\n\t\t\tlongitude: {\n\t\t\t\trequired: true\n\t\t\t}\n\t\t},\n\t\tmessages: {\n\t\t\tusrname: {\n\t\t\t\trequired: \"You must enter a user name.\",\n\t\t\t\tminlength: \"Your User name must be at least {0} characters.\"\n\t\t\t},\n\t\t\tmobile: {\n\t\t\t\trequired: \"You must enter a mobile number.\",\n\t\t\t\tminlength: \"Your number must be at least {0} characters.\",\n\t\t\t\tdigits: \"You must enter valid digits.\"\n\t\t\t},\n\t\t\tlatitude: {\n\t\t\t\trequired: \"You must enter a latitude.\"\n\t\t\t},\n\t\t\tlongitude: {\n\t\t\t\trequired: \"You must enter a longitude.\"\n\t\t\t}\n\t\t\t\t\n\t\t},\n\t  \n\n\t\tsubmitHandler: function(event){\n\t\tvar email = $('[name=email]').val();\n        var password = $('[name=password]').val();\n        var mobile = $('[name=mobile]').val();\n        var usrname = $('[name=usrname]').val();\n        var type = $('[name=typeofuser]').val();\n\t\tvar latitude = $('[name=latitude]').val();\n        var longitude = $('[name=longitude]').val();\n\t\tvar options = {\n\t\t\temail: email,\n\t\t\tpassword: password,\n\t\t\tprofile: {\n\t\t\t\tname: usrname,\n\t\t\t\tmobile: mobile,\n\t\t\t\ttypeofuser: type,\n\t\t\t\tcoordinates: {\n                        lat: latitude,\n                        lng: longitude\n                    }\n\t\t\t},\n\t\t\tsecretAttribute: \"secretString\"\n\t\t};\n\n\t\tAccounts.createUser(options, function(error){\n\t\t\tif(error){\n\t\t\t\tif(error.reason == \"Email already exists.\"){\n\t\t\t\t\tvalidator.showErrors({\n\t\t\t\t\t\temail: \"That email already belongs to a registered user.\"   \n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//this.render('map', {data: {title: 'Now You are a Registered Cab Driver at Devois'}});\n\t\t\t\tRouter.go(\"map\"); // Redirect user if registration succeeds\n\t\t\t}\n\t\t});\n\t  \n        }\n    });\n\t//var res = Meteor.users.find().fetch();\n\t//console.log(\"RES\");\n\t//console.log(res);\n});\n  \n\n \n Template.registerPass.onRendered(function(){\n\t  var validator = $('.registerPass').validate({\n\t\t\n\t\t\trules: {\n\t\t\tusrname: {\n\t\t\t\trequired: true,\n\t\t\t\tminlength: 4\n\t\t\t},\n\t\t\tmobile: {\n\t\t\t\trequired: true,\n\t\t\t\tminlength: 10,\n\t\t\t\tdigits: true\n\t\t\t}\n\t\t},\n\t\tmessages: {\n\t\t\tusrname: {\n\t\t\t\trequired: \"You must enter a user name.\",\n\t\t\t\tminlength: \"Your User name must be at least {0} characters.\"\n\t\t\t},\n\t\t\tmobile: {\n\t\t\t\trequired: \"You must enter a mobile number.\",\n\t\t\t\tminlength: \"Your number must be at least {0} characters.\",\n\t\t\t\tdigits: \"You must enter valid digits.\"\n\t\t\t}\n\t\t},\n\n\t\tsubmitHandler: function(event){\n\t\tvar email = $('[name=email]').val();\n        var password = $('[name=password]').val();\n        var mobile = $('[name=mobile]').val();\n        var usrname = $('[name=usrname]').val();\n        var type = $('[name=typeofuser]').val();\n\t\tvar options = {\n\t\t\temail: email,\n\t\t\tpassword: password,\n\t\t\tprofile: {\n\t\t\t\tname: usrname,\n\t\t\t\tmobile: mobile,\n\t\t\t\ttypeofuser: type,\n\t\t\t\tcoordinates: {\n                        lat: 0,\n                        lng: 0\n                    }\n\t\t\t},\n\t\t\tsecretAttribute: \"secretString\"\n\t\t};\n\n\t\tAccounts.createUser(options, function(error){\n\t\t\tif(error){\n\t\t\t\tif(error.reason == \"Email already exists.\"){\n\t\t\t\t\tvalidator.showErrors({\n\t\t\t\t\t\temail: \"That email already belongs to a registered user.\"   \n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\t\t\t\n\t\t\telse {\n\t\t\t\tSession.set(\"passid\", Meteor.userId());\n\t\t\t\tRouter.go(\"map\"); // Redirect user if registration succeeds\n\t\t\t}\n\t\t});\n\t\t\n        }\n    });\n});\n \n  \n}\n\n\n\nRouter.route('/registerCab');\nRouter.route('/registerPass');\n\nRouter.route('/map');\nRouter.route('/login');\n\nRouter.route('/', {\n    name: 'home',\n    template: 'home'\n});\n\n"]},"hash":"00815d486a8b9fdc7301abd600a8d045bd8605ca"}
